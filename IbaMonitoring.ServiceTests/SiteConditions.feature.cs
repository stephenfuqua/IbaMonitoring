// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace IbaMonitoring.ServiceTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SiteConditionsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SiteConditions.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SiteConditions", "As an IBA observer\r\nI want to record the conditions for a site visit \r\nso that I " +
                    "can submit point count observations.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "SiteConditions")))
            {
                IbaMonitoring.ServiceTests.SiteConditionsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Happy Path")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SiteConditions")]
        public virtual void HappyPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Happy Path", ((string[])(null)));
#line 8
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Site Name"});
            table1.AddRow(new string[] {
                        "Moria"});
            table1.AddRow(new string[] {
                        "Lothlorien"});
            table1.AddRow(new string[] {
                        "Morgul Vale"});
#line 9
 testRunner.Given("I can choose from these sites:", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "First",
                        "Last"});
            table2.AddRow(new string[] {
                        "Gollum",
                        "Smeagol"});
            table2.AddRow(new string[] {
                        "Drogo",
                        "Baggins"});
            table2.AddRow(new string[] {
                        "Gaffer",
                        "Gamgee"});
#line 14
 testRunner.And("I can choose from these observers and recorders:", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value",
                        "Sky"});
            table3.AddRow(new string[] {
                        "0",
                        "Dark"});
            table3.AddRow(new string[] {
                        "1",
                        "Light"});
            table3.AddRow(new string[] {
                        "2",
                        "Dismal"});
            table3.AddRow(new string[] {
                        "3",
                        "Gloomy"});
#line 19
 testRunner.And("I can choose from these sky conditions:", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value",
                        "Wind"});
            table4.AddRow(new string[] {
                        "0",
                        "None"});
            table4.AddRow(new string[] {
                        "1",
                        "Refreshing"});
            table4.AddRow(new string[] {
                        "2",
                        "Stiff"});
            table4.AddRow(new string[] {
                        "3",
                        "Tornado"});
#line 25
 testRunner.And("I can choose from these wind conditions:", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "SiteVisited",
                        "Morgul Vale"});
            table5.AddRow(new string[] {
                        "VisitDate",
                        "2014-12-29"});
            table5.AddRow(new string[] {
                        "Observer",
                        "Drogo Baggins"});
            table5.AddRow(new string[] {
                        "Recorder",
                        "Gaffer Gamgee"});
            table5.AddRow(new string[] {
                        "StartTime",
                        "6:02"});
            table5.AddRow(new string[] {
                        "StartSky",
                        "Dark"});
            table5.AddRow(new string[] {
                        "StartWind",
                        "Stiff"});
            table5.AddRow(new string[] {
                        "StartTemp",
                        "5"});
            table5.AddRow(new string[] {
                        "StartUnit",
                        "C"});
            table5.AddRow(new string[] {
                        "EndTime",
                        "8:29"});
            table5.AddRow(new string[] {
                        "EndSky",
                        "Dismal"});
            table5.AddRow(new string[] {
                        "EndWind",
                        "Tornado"});
            table5.AddRow(new string[] {
                        "EndTemp",
                        "6"});
            table5.AddRow(new string[] {
                        "EndUnit",
                        "C"});
            table5.AddRow(new string[] {
                        "IsValid",
                        "true"});
#line 31
 testRunner.And("I have entered these values into the form:", ((string)(null)), table5, "And ");
#line 48
 testRunner.When("I press Next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
 testRunner.Then("I will be directed to the \'PointCounts\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 50
 testRunner.And("the form data will be saved into the database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
